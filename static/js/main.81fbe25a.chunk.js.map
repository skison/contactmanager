{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","_ref","delete","_x","_x2","_this2","_this$props$contact","name","email","phone","className","onClick","classnames","fa-angle-up","fa-angle-down","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","label","placeholder","onChange","error","htmlFor","is-invalid","defaultProps","initialState","errors","AddContact","onSubmit","e","_this$state","newContact","preventDefault","keys","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","_callee2","_context2","Header","branding","href","exact","About","NotFound","Test","title","body","console","log","fetch","then","response","json","App","context_Provider","layout_Header","react_router","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81fbe25a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  //async await syntax for AJAX calls\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\n\r\nexport class Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  //Make delete request (to fake JSON placeholder API), then dispatch to update state\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className={classnames(\"fas\", {\r\n                    \"fa-angle-up\": showContactInfo,\r\n                    \"fa-angle-down\": !showContactInfo\r\n                  })}\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nexport class Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\n//default empty state\r\nconst initialState = {\r\n  name: \"\",\r\n  email: \"\",\r\n  phone: \"\",\r\n  errors: {}\r\n};\r\n\r\nexport class AddContact extends Component {\r\n  state = initialState;\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //hold errors in errors object\r\n    let errors = {};\r\n\r\n    //check for errors\r\n    if (name === \"\") {\r\n      errors.name = \"Name is required\";\r\n    }\r\n    if (email === \"\") {\r\n      errors.email = \"Email is required\";\r\n    }\r\n    if (phone === \"\") {\r\n      errors.phone = \"Phone is required\";\r\n    }\r\n\r\n    //set errors object\r\n    this.setState({ errors });\r\n\r\n    //exit early if there were any errors\r\n    if (Object.keys(errors).length) {\r\n      return;\r\n    }\r\n\r\n    //otherwise, create contact with new info, send to JSONplaceholder API, get back the ID and sent contact info, then dispatch to add locally.\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    //clear state\r\n    this.setState(initialState);\r\n\r\n    //redirect to home\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contect</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    type=\"tel\"\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\n//default empty state\r\nconst initialState = {\r\n  name: \"\",\r\n  email: \"\",\r\n  phone: \"\",\r\n  errors: {}\r\n};\r\n\r\nexport class EditContact extends Component {\r\n  state = initialState;\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //hold errors in errors object\r\n    let errors = {};\r\n\r\n    //check for errors\r\n    if (name === \"\") {\r\n      errors.name = \"Name is required\";\r\n    }\r\n    if (email === \"\") {\r\n      errors.email = \"Email is required\";\r\n    }\r\n    if (phone === \"\") {\r\n      errors.phone = \"Phone is required\";\r\n    }\r\n\r\n    //set errors object\r\n    this.setState({ errors });\r\n\r\n    //exit early if there were any errors\r\n    if (Object.keys(errors).length) {\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    //clear state\r\n    this.setState(initialState);\r\n\r\n    //redirect to home\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contect</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    type=\"tel\"\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <NavLink exact to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink exact to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink exact to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n\r\n  //good place for AJAX calls, called when component output is added to DOM\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount...\");\r\n\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n  }\r\n\r\n  // //deprecated\r\n  // componentWillMount() {\r\n  //   console.log(\"componentWillMount...\");\r\n  // }\r\n\r\n  // //called when compnent updates (like if state changes), just after DOM update\r\n  // componentDidUpdate() {\r\n  //   console.log(\"componentDidUpdate...\");\r\n  // }\r\n\r\n  // //deprecated\r\n  // componentWillUpdate() {\r\n  //   console.log(\"componentWillUpdate...\");\r\n  // }\r\n\r\n  // //deprecated\r\n  // componentWillReceiveProps(nextProps, nextState) {\r\n  //   console.log(\"componentWillReceiveProps...\");\r\n  // }\r\n\r\n  // static getDerivedStateFromProps(nextProps, prevState) {\r\n  //   //can't use setState, must return state instead\r\n  //   return null;\r\n  // }\r\n\r\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\r\n  //   console.log(\"getSnapshotBeforeUpdate...\");\r\n  // }\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Better Comments Test\r\n *\r\n * * This is a very important line\r\n *\r\n * ! Warning: don't use this code!\r\n *\r\n * ? Questions?\r\n *\r\n * TODO: Remove Herobrine\r\n *\r\n * //REDACTED\r\n *\r\n * @param myParam example parameter string\r\n */\r\n\r\nexport default Test;\r\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\n\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}